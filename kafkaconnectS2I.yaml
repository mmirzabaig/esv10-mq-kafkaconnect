apiVersion: eventstreams.ibm.com/v1beta1
kind: KafkaConnectS2I
metadata:
  name: es-prod-cluster
  annotations:
    eventstreams.ibm.com/use-connector-resources: "true"
spec:
  replicas: 1
  bootstrapServers: 'es-prod-kafka-bootstrap.cp4i.svc:9093'
  config:
    config.storage.topic: connect-cluster-configs
    group.id: connect-cluster
    offset.storage.topic: connect-cluster-offsets
    status.storage.topic: connect-cluster-status
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  template:
    pod:
      imagePullSecrets:
        - name: deployer-dockercfg-dqzb2
      metadata:
        annotations:
          cloudpakId: c8b82d189e7545f0892db9ef2731b90d
          cloudpakName: IBM Cloud Pak for Integration
          cloudpakVersion: 2020.2.1
          eventstreams.production.type: CloudPakForIntegrationNonProduction
          productChargedContainers: es-prod-connect
          productCloudpakRatio: '2:1'
          productID: 2a79e49111f44ec3acd89608e56138f5
          productMetric: VIRTUAL_PROCESSOR_CORE
          productName: IBM Event Streams for Non Production
          productVersion: 10.0.0
  containers:
    - name: es-prod-cluster
      image: kafkaconnect-with-mq-source:0.0.1
      volumeMounts:
        - name: mq-truststore-cert
          mountPath: /opt/kafka/external-configuration/mq-truststore-cert/
  externalConfiguration:
    volumes:
      - name: mq-truststore-cert
        secret:
          secretName: mq-truststore-cert
  tls:
      trustedCertificates:
        - secretName: es-prod-cluster-ca-cert
          certificate: ca.crt
  authentication:
    type: tls
    certificateAndKey:
      certificate: user.crt
      key: user.key
      secretName: production-internal